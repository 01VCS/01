wrap "gix tools help"

option to add all symlinks recursively (check if file with same flag -- exist then add it too)



Option to overlap/wrap git (git is renamed git-original and our own git wraps it)

use rust-git (gix) whenever possible
install pijul and git-lfs

compressed versioning:
office/compressed: https://github.com/costerwi/rezip, https://github.com/callegar/Rezip
DB: http://web.archive.org/web/20191113223614/https://stackoverflow.com/questions/13608706/using-version-control-git-on-a-mysql-database
------------------------------
Diff:
PDF: http://web.archive.org/web/20191113221744/https://tante.cc/2009/03/24/versioning-pdf-files-with-git/



❯ git push
fatal: The current branch main has no upstream branch.
To push the current branch and set the remote as upstream, use
    git push --set-upstream origin main
    
❯ 01 ignore *.png
[!] Failure on ignoring file/folder. '*.png' isn't here. Please ensure you wrote the correct path/name.
fix with:
if ls *.png 1> /dev/null 2>&1; then

❯ 01 ignore Floflis\ ISO/Floflis\ ppl/
/usr/bin/01: 17: [: ./Floflis: unexpected operator
[!] Failure on ignoring file/folder. 'Floflis ISO/Floflis ppl/' isn't here. Please ensure you wrote the correct path/name.

01 init kick
x="init"
export x
git $x
git add .
git commit -m "$x"

- store files' dates (soon)

01 blm
git checkout -b main master && git branch -D master
-
guide on next steps with site-specific tutorials for Github and Gitlab
git push --set-upstream origin main

- install IPFS which should be built-in (would need Plugz)

- keep using sh instead of bash
- import git
- preference for gitty

- know when it is a folder/file when ignoring

merge pijul (what a horrible name) VCS if it mets the following criteria:
- can decompress the db into individual objects, like git unpack
- objects are compatible with git, for unique files for use in IPFS
- git projects can easily be ported to it, and else. a project can have the same repo both in git and pijul, and make them in sync
then, rename gitty to 01, while also having backwards compatibility with git

Gitty also haves a repo. clone with

support recursive flag

updates

gitty udf - bare git (or different git folders) in disc as remote

git checkout -f HEAD

README.md
* Rely primarily on gitless, install git as option
* Can resume git clone/sync, like torrent (DHT instead of HTTP), without worries about network resets; also avoids MiTM attacks
* Blockchain-like, with a P2P ledger of blobs/modifications (IPFS' IPNS)
------------------------------
on install: rename "git" as "gitish", install itself as "git", also having the "gitty" exec
install git-unpack as lib, support its command
node/dat as comments in recipe.json; add git binaries, add go/IPFS
------------------------------
Explorer integration (support Thunar actions and other fm context menus)
all linuxes: http://wiki.rabbitvcs.org/wiki/download
XFCE: https://goodies.xfce.org/projects/thunar-plugins/thunar-vcs-plugin
Windows: https://tortoisegit.org/download/
------------------------------
IPFS for hosting and data de-duplication
------------------------------
IPNS for blockchain-like append-only storage
------------------------------
support git LFS https://www.perforce.com/blog/vcs/how-git-lfs-works
------------------------------
support UDF sequential/packet disc writing
